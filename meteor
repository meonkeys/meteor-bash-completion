# bash completion for meteor     -*- shell-script -*-
# vim: ft=sh ts=2 sw=2 et

__initMeteorCommands() {
  local commandName=$1
  local cacheFilename=.meteor-bash-completion-cache-commands
  local cacheDir=~
  local cache=$cacheDir/$cacheFilename
  # cache is readable and younger than 24 hours
  if [[ -r $cache ]] && test $( find $cacheDir -name $cacheFilename -mtime -1 )
  then
    meteorCommands=$( cat $cache )
    return 0
  fi
  # in case there's a stale one
  rm -f $cache
  $commandName help | \grep '^   \w' | sed -e 's/^[ \t]\+//' | cut -d' ' -f1 >> $cache
  _parse_usage $commandName help >> $cache
  meteorCommands=$( cat $cache )
}

__initMeteorAddArgs() {
  local commandName=$1
  local cacheFilename=.meteor-bash-completion-cache-add-args
  local cacheDir=~
  local cache=$cacheDir/$cacheFilename
  # cache is readable and younger than 24 hours
  if [[ -r $cache ]] && test $( find $cacheDir -name $cacheFilename -mtime -1 )
  then
    meteorAddArgs=$( cat $cache )
    return 0
  fi
  # in case there's a stale one
  rm -f $cache
  $commandName list | cut -d" " -f 1 >> $cache
  meteorAddArgs=$( cat $cache )
}

_meteor() {
  local cur prev commands
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"

  case "${prev}" in
    --example)
      COMPREPLY=($(compgen -W '$( meteor create --list | grep "^  " )' -- ${cur}))
      return 0
      ;;

    run)
      local run=" \
        --port -p \
        --production \
        --raw-logs \
        --settings \
        --release \
        --program"

      COMPREPLY=($(compgen -W "${run}" -- ${cur}))
      return 0
      ;;

    create)
      case "${prev}" in
        --example)
          COMPREPLY=($(compgen -W '$( meteor create --list | grep "^  " )' -- ${cur}))
          return 0
          ;;
      esac
      local create=" \
        --example \
        --list"

      COMPREPLY=($(compgen -W "${create}" -- ${cur}))
      return 0
      ;;

    deploy)
      local deploy=" \
        --delete -D \
        --debug \
        --settings \
        --star"

      COMPREPLY=($(compgen -W "${deploy}" -- ${cur}))
      return 0
      ;;

    update)
      local update=" \
        --release"

      COMPREPLY=($(compgen -W "${update}" -- ${cur}))
      return 0
      ;;

    list)
      local list=" \
        --using"

      COMPREPLY=($(compgen -W "${list}" -- ${cur}))
      return 0
      ;;

    add)
      __initMeteorAddArgs $1
      COMPREPLY=($(compgen -W "$meteorAddArgs" -- ${cur}))
      return 0
      ;;

    mongo)
      local mongo=" \
        -U \
        --url"

      COMPREPLY=($(compgen -W "${mongo}" -- ${cur}))
      return 0
      ;;
  esac

  __initMeteorCommands $1
  COMPREPLY=($(compgen -W "${meteorCommands}" -- ${cur}))
  return 0
}

complete -F _meteor meteor
